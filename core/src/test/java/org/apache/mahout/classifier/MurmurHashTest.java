package org.apache.mahout.classifier;

import junit.framework.TestCase;
import org.junit.Test;

import java.io.UnsupportedEncodingException;

public class MurmurHashTest extends TestCase {
    @Test
    public void testForLotsOfChange() throws UnsupportedEncodingException {
        long h1 = MurmurHash.hashLong("abc".getBytes("UTF-8"), 0);
        long h2 = MurmurHash.hashLong("abc ".getBytes("UTF-8"), 0);
        int flipCount = Long.bitCount(h1 ^ h2);
        assertTrue("Small changes should result in lots of bit flips, only found " + flipCount, flipCount > 25);
    }

    @Test
    public void testHash64() throws UnsupportedEncodingException {
        // test data generated by running MurmurHash2_64.cpp
        assertEquals(0x9cc9c33498a95efbL, MurmurHash.hash64A("abc".getBytes("UTF-8"), 0));
        assertEquals(0xd2c8c9b470122bddL, MurmurHash.hash64A("abc def ghi jkl ".getBytes("UTF-8"), 0));
        assertEquals(0xcd37895736a81cbcL, MurmurHash.hash64A("abc def ghi jkl moreGoo".getBytes("UTF-8"), 0));
    }

    @Test
    public void testHash64original() throws UnsupportedEncodingException {
        // test data generated by running MurmurHash2_64.cpp
        assertEquals(0x9cc9c33498a95efbL, MurmurHash.hash64A_original("abc".getBytes("UTF-8"), 0));
        assertEquals(0xd2c8c9b470122bddL, MurmurHash.hash64A_original("abc def ghi jkl ".getBytes("UTF-8"), 0));
        assertEquals(0xcd37895736a81cbcL, MurmurHash.hash64A_original("abc def ghi jkl moreGoo".getBytes("UTF-8"), 0));
    }

    @Test
    public void testHash() throws UnsupportedEncodingException {
        // test data generated by running MurmurHashNeutral2.cpp
        assertEquals(0x13577c9b, MurmurHash.hash("abc".getBytes("UTF-8"), 0));
        assertEquals(0x6fec441b, MurmurHash.hash("abc def ghi jkl ".getBytes("UTF-8"), 0));
        assertEquals(0x7e953277, MurmurHash.hash("abc def ghi jkl moreGoo".getBytes("UTF-8"), 0));
    }

    @Test
    public void testHashNio() throws UnsupportedEncodingException {
        // test data generated by running MurmurHashNeutral2.cpp
        assertEquals(0x13577c9b, MurmurHash.hash_original("abc".getBytes("UTF-8"), 0));
        assertEquals(0x6fec441b, MurmurHash.hash_original("abc def ghi jkl ".getBytes("UTF-8"), 0));
        assertEquals(0x7e953277, MurmurHash.hash_original("abc def ghi jkl moreGoo".getBytes("UTF-8"), 0));
    }
}
